"""
Django settings for moto_food project.

Generated by 'django-admin startproject' using Django 4.1.3.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""

from pathlib import Path
import os
from dotenv import load_dotenv
from decouple import config, Csv

import cloudinary
import cloudinary.uploader
import cloudinary.api
import dj_database_url

# Build paths inside the project like this: BASE_DIR / 'subdir'.

BASE_DIR = Path(__file__).resolve().parent.parent

load_dotenv(os.path.join(BASE_DIR, ".env"))


BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.getenv("SECRET_KEY")



# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    
    'delivery',
    'cloudinary',
    'bootstrap5',
    # 'cart',
    

]



MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    # 'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
]

ROOT_URLCONF = 'moto_food.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                # 'cart.context_processor.cart_total_amount',
            ],
        },
    },
]

WSGI_APPLICATION = 'moto_food.wsgi.application'



# Database
# https://docs.djangoproject.com/en/4.1/ref/settings/#databases
MODE = os.getenv("MODE")
# print(MODE)
DATABASE_URL=config('DATABASE_URL')
# print(DATABASE_URL)
if MODE == 'dev':
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.postgresql',            
            'NAME': config('DEVELOPMENT_DATABASE_NAME'),
            'USER': config('DEVELOPMENT_DATABASE_USER'),
        'PASSWORD': config('DEVELOPMENT_DATABASE_PASSWORD'),
        }
    }

elif MODE == 'prod':
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.postgresql_psycopg2',            
            'NAME': config('PRODUCTION_DATABASE_NAME'),
            'USER': config('PRODUCTION_DATABASE_USER'),
        'PASSWORD': config('PRODUCTION_DATABASE_PASSWORD'),
        'HOST': config('PRODUCTION_DATABASE_HOST'),
        'PORT': config('PRODUCTION_DATABASE_PORT')
        }
    }
else:
    # DATABASES = {
    #     'default': dj_database_url.config(default=config('DATABASE_URL'))
    # }

    DATABASES = {
    "default": dj_database_url.config(default=DATABASE_URL, conn_max_age=1800),
    }    

# db_from_env = dj_database_url.config(default=DATABASE_URL, conn_max_age=500),
   

# DATABASES['default'].update(db_from_env)

# print (f'134: {DATABASES}')


# Password validation
# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Africa/Nairobi'

USE_I18N = True


USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.1/howto/static-files/

PROJECT_ROOT = os.path.normpath(os.path.dirname(__file__))

STATIC_URL = "static/"
STATICFILES_DIRS = [os.path.join(BASE_DIR, "static")]
STATIC_ROOT = os.path.join(BASE_DIR, "staticfiles")




MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'static')

# Default primary key field type
# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


AUTH_USER_MODEL = "delivery.User" 

LOGIN_REDIRECT_URL='index'
LOGOUT_REDIRECT_URL='index'

EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_USE_TLS = True
EMAIL_PORT = 587
EMAIL_HOST_USER = 'oluoch1juliet@gmail.com'
EMAIL_HOST_PASSWORD = 'yourpassword'


cloudinary.config( 
  cloud_name = "dkcivjz16", 
  api_key = "471245994175868", 
  api_secret = "CAS-yrgWOfJHRN1IYD58181C8Sw", 
  secure = True
)


# CART_SESSION_ID = 'cart'

APPEND_SLASH=False 







# print (f'200: {DATABASES}')